
I am using 3 slip days on this assignment
COMP 321 Project 6: Web Proxy

Griffin Ball gab11

---(Do not write lines of text that exceed the width of this line.)------------

DESIGN DISCUSSION

Please answer the following questions about the design of your proxy.

1. Describe the steps taken by your proxy to service a single HTTP transaction
   from beginning to end.  (10-14 sentences)
   My implementation usinb the prethreading approach has 8 threads that are
   constantly trying to remove and process a request from the shared buffer. A 
   thread writes the request into a buffer and requests more memory whenever the
   rewuest is longer than MAXLINE. Once a thread accepts a request it first 
   changes the request into the correct format by first making sure its a get 
   request and then only including the path and http version. Then the headers 
   are read and edited and open_client is called. Once an address to connect to 
   is found I use rio_readintib and rio_writen to write the request to the end
   server. I then write the response back to the client using rio_writen 
   and update the size of the response. I then create the log entry and write it
   to the log using fflush. Finally after that I free the memory associated with
   the log entry and return the file descriptor of the connection back to the
   avaivalble pool.



2. Did you modify the first line of the request message?  If so, how?
   (1-3 sentences)
   Yes I took out the proxy connection line.

3. Did you add/remove/modify any request headers?  If so, how?  (1-3 sentences)
Yes in my read_requesthdrs() function I did not include any lines with 
connection in them.

4. How did you forward the response message?  (2-4 sentences)
I forwarded the response message with rio_writen, through the same connection 
recieved from the client. 


6. How many threads did your proxy use to implement concurrency?  Explain how
   you chose this number.  (3-6 sentences)
   I used 8 threads in my implmenetation. The clear computers have 16 cores so
   that allows a good amount of them to be utilized at once. I think that 8
   isn't too much overhead to create the threads at the start.

7. How did you write to the access log file?  (1-2 sentences)
I used the create log entry function and the fprintf and fflush to write to the 
access log file.


8. How do you ensure atomicity when writing to the access log file?
   (1-2 sentences)
   Using fflush to ensure all pending data is written at once. The fflush
   function is thread safe.

9. When did you open/close the access log file?  (2 sentences)
I first opened the log file at the beginning of main at line 113. I then close
the log file at the end of main.

